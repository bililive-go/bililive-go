on:
  issues:
    types:
      - opened

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Check if issue is labeled as bug or question
        id: check-label
        uses: actions/github-script@v5
        with:
          script: |
            const issue = context.issue;
            const labels = issue.labels.map(label => label.name);
            const isBugOrQuestion = labels.includes('bug') || labels.includes('question');
            core.setOutput('isBugOrQuestion', isBugOrQuestion);

      - name: Validate issues
        if: steps.check-label.outputs.isBugOrQuestion
        uses: actions/github-script@v5
        with:
          script: |
            const issue = context.issue;
            const body = context.payload.issue.body;
            const versionRegex = /### 程序版本\s*(.+)\s*### 所使用的/;
            const configRegex = /### 所使用的 config 文件的内容\s*(.+)\s*### 程序 log/;
            const logRegex = /### 程序 log\s*(.+)\s*### 自由描述/;
            const versionMatch = body.match(versionRegex);
            const configMatch = body.match(configRegex);
            const logMatch = body.match(logRegex);
            let closeReasons = [];
            if (!versionMatch || !versionMatch[1].match(/\d+/)) {
              closeReasons.push('请填入有效的程序版本。');
            } else if (!configMatch || configMatch[1] === '_No response_') {
              closeReasons.push('请填入有效的conifg内容。');
            } else if (!logMatch || logMatch[1] === '_No response_') {
              closeReasons.push('请填入有效的log内容。');
            }
            if (closeReasons.length > 0) {
              const newComment = context.issue({
                body: `Issue 未通过验证：\n${closeReasons.join('\n')}`
              });
              await github.issues.createComment(newComment);
              await github.issues.update({
                owner: issue.owner,
                repo: issue.repo,
                issue_number: issue.number,
                state: 'closed'
              });
            }
          github-token: ${{ secrets.GITHUB_TOKEN }}