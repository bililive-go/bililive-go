name: Bililive-go Android Build

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'false'


jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      # 前端环境准备
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1

      - name: Check Node.js version
        run: node -v
      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          
      # 后端环境准备
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Check Go version
        run: |
          go version


      # 安装 FFmpeg
      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      # 克隆代码
      - name: Clone repository
        run: |
          git clone https://github.com/bililive-go/bililive-go.git
          cd bililive-go
        
      # 设置环境变量
      - name: Set environment variables
        working-directory: bililive-go
        run: |
          pwd
          ls -a
          echo "GIT_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "ANDROID_NDK_VERSION=r25c" >> $GITHUB_ENV

      # 安装 Android NDK
      - name: Install Android NDK
        working-directory: bililive-go
        run: |
          wget https://dl.google.com/android/repository/android-ndk-${{ env.ANDROID_NDK_VERSION }}-linux.zip
          unzip -q android-ndk-${{ env.ANDROID_NDK_VERSION }}-linux.zip
          echo "ANDROID_NDK_ROOT=$(pwd)/android-ndk-${{ env.ANDROID_NDK_VERSION }}" >> $GITHUB_ENV

      # 构建前端页面
      - name: Build web
        working-directory: bililive-go
        run: make build-web
        
      
          
      # 编译 bililive-go 项目
      - name: Build bililive-go for Android
        working-directory: bililive-go
        run: |
          # 设置交叉编译环境
          export GOOS=android
          export CGO_ENABLED=0 # 不需要编译 FFmpeg，禁用 CGO
          export CC=${{ env.ANDROID_NDK_ROOT }}/toolchains/llvm/prebuilt/linux-x86_64/bin/arm64-v8a-linux-android21-clang
          export CXX=${{ env.ANDROID_NDK_ROOT }}/toolchains/llvm/prebuilt/linux-x86_64/bin/arm64-v8a-linux-android21-clang++

          # 编译二进制文件
          mkdir -p bin
          go build -tags release \
            -ldflags "-X github.com/bililive-go/bililive-go/src/consts.AppVersion=${{ env.GIT_TAG }}" \
            -o bin/bililive-go-android-arm64 \
            ./src/cmd/bililive/

      # 上传 Android 二进制文件，使用最新版本
      - name: Upload Android binaries
        uses: actions/upload-artifact@v4
        with:
          name: bililive-go-android-binaries
          path: bililive-go/bin/bililive-go-android-arm64

  release:
    needs: build-android
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: bililive-go-android-binaries
          path: bin

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: bin/bililive-go-android-arm64
          prerelease: ${{ contains(github.ref, 'rc') }}
